{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import * as U from './util.js';\
import ROT from 'rot-js';\
import \{StartupMode\} from './ui_mode.js';\
import \{PlayMode\} from './ui_mode.js';\
import \{LoseMode\} from './ui_mode.js';\
import \{WinMode\} from './ui_mode.js';\
\
export let Game = \{\
\
  SPACING: 1.1,\
  display: \{\
    main: \{\
      w: 140,\
      h: 40,\
      o: null\
    \},\
    avatar: \{\
      w: 20,\
      h: 40,\
      o: null\
    \},\
    message: \{\
      w: 140,\
      h: 6,\
      o: null\
    \}\
  \},\
\
  modes: \{\
    startup: '',\
    curMode: ''\
  \},\
\
  init: function() \{\
    console.log("Game object:");\
    console.dir(Game);\
\
    this.setupDisplays();\
    this.setupModes();\
    this.switchMode("startup");\
  \},\
\
\
  setupDisplays: function() \{\
    this.display.main.o = new ROT.Display(\{\
      width: this.display.main.w,\
      height: this.display.main.h,\
      spacing: this.display.SPACING\});\
\
    this.display.avatar.o = new ROT.Display(\{\
      width: this.display.avatar.w,\
      height: this.display.avatar.h,\
      spacing: this.display.SPACING\});\
\
    this.display.message.o = new ROT.Display(\{\
      width: this.display.message.w,\
      height: this.display.message.h,\
      spacing: this.display.SPACING\});\
\
     this.setupModes();\
\
     this.switchMode("startup");\
     // this.switchMode("play");\
    // // this.switchMode("lose");\
    // // this.switchMode("win");\
\
  \},\
\
  setupModes: function() \{\
    this.modes.startup = new StartupMode(this);\
    this.modes.play = new PlayMode(this);\
    this.modes.lose = new LoseMode(this);\
    this.modes.win = new WinMode(this);\
  \},\
\
\
  switchMode: function(newModeName) \{\
    if (this.curMode) \{\
      this.curMode.exit();\
    \}\
    this.curMode = this.modes[newModeName];\
    if (this.curMode) \{\
      this.curMode.enter();\
    \}\
    this.render();\
  \},\
\
  getDisplay: function (displayId) \{\
    if (this.display.hasOwnProperty(displayId)) \{\
      return this.display[displayId].o;\
    \}\
    return null;\
  \},\
\
  render: function() \{\
    this.renderMain();\
    this.renderAvatar();\
    this.renderMessage();\
  \},\
\
  // renderMain: function() \{\
  //   console.log("renderMain");\
  //   this.curMode.render(this.display.main.o);\
  // \},\
  //\
  // renderAvatar: function() \{\
  //   console.log("renderAvatar");\
  //   this.curMode.render(this.display.avatar.o);\
  // \},\
  //\
  // renderMessage: function() \{\
  //   console.log("renderMessage");\
  //   this.curMode.render(this.display.message.o);\
//  \},\
\
  renderAvatar: function() \{\
    let d = this.display.avatar.o;\
    d.clear();\
    for (let i = 0; i < 10; i++) \{\
      d.drawText(5,i+5,"avatar");\
    \}\
  \},\
\
  renderMain: function() \{\
    this.display.main.o.clear();\
    if (this.curMode === null || this.curMode == '') \{\
      return;\
    \} else \{\
      this.curMode.render();\
    \}\
  \},\
\
  renderMessage: function() \{\
    let d = this.display.avatar.o;\
    d.clear();\
    for (let i = 0; i < 10; i++) \{\
      d.drawText(5,i+5,"message");\
    \}\
  \},\
\
  bindEvent: function(eventType) \{\
      window.addEventListener(eventType, (evt) => \{\
        this.eventHandler(eventType, evt);\
      \});\
  \},\
\
  eventHandler: function (eventType, evt) \{\
      // When an event is received have the current ui handle it\
      if (this.curMode !== null && this.curMode != '') \{\
        if (this.curMode.handleInput(eventType, evt)) \{\
          this.render();\
          //Message.ageMessages();\
        \}\
      \}\
  \}\
\
\};\
\
\
\
\
\
\
\
//console.dir(ROT);\
\
//document.write("ROT support status: "+ROT.isSupported()+"<br/>");\
\
//let name = "Bob", time = "today";\
//console.log(`Hello $\{name\}, how are you $\{time\}?`);\
}